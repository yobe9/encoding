UTF-8:
UTF הוא סטנדרט שמטרתו להחליף את התווים הקיימים היום במחשב עם סטנדרט אחיד ולתמוך בכל התווים שקיימים. ראשי תיבות של bit Unicode Transformation Format.
ספציפית ב-UTF-8, תו מורכב מ-1-4 bytes, ויכול לייצג כל תו בסטנדרט. בנוסף, הוא תומך בתווים שהוגדרו ב-ASCII, וכמו כן משתמשים בו בעיקר במיילים ובדפי אינטרנט.
התמיכה ב-ASCII נעשית על ידי כך ש-128 בתווים הראשונים ב-UTF8 מקודדים בדומה לתווי ה-ASCII.
ההבדל בין UNICODE ל-UTF8 הוא שב-UNICODE קובעים ערך דצימלי לתווים, וה-UTF8 עושה קידוד שלהם לבינארי כדי שיאוחסנו במחשב.
כל תו שערכו 127 או פחות ייצוג על ידי byte אחד כאשר ה-msb יהיה כבוי. עבור תווים בין 127 ל-2047 ישתמשו ב-2 bytes, כאשר בראשון שני הביטים הראשונים יהיו דולקים והשלישי כבוי (110), בעוד בשני הביט הראשון יהיה דולק והשני כבוי (10).
עבור תווים שצורכים 3 ו-4 bytes יש חוקיות דומה, כאשר ב-byte הראשון כמו ה-1 הדולקות מצד שמאל תהיה ככמות מספר ה-byte הדרושים לייצוג התו.
במקומות הריקים שנשארו ממלאים את הביטים לפי ערך המספר, הספרות השמאליות במספר (הגדולות) יתחילו מה-byte הראשון (השמאלי ביותר) וימשיכו ל-byte-ים האחרים.
באופן פורמלי, נתרגם את התבנית לחוקים:
1. כאשר אנחנו משתמשים בייצוג עם byte אחד, ה-msb יהיה 0
2. כאשר מייצגים תו ביותר מ-byte בודד, ב-msb של כל byte יהיה 1.
3. ה-byte הראשון ברצף ה-byte-ים שמייצגים תו יתחיל עם רצף של 1 שיתאר בכמה byte-ים הולכים להשתמש, ואחריהם הספרה 0.
4. כל byte שאינו הראשון ברצף ה-byte-ים שמצייגים תו יתחיל עם 10.
החוקים האלו מבטיחים שהרישות של התווים יהיו שונים ולא תיווצר לנו הכלה של תו בתוך תו. בנוסף, אם byte אחד נפגע בדרך זה לא יגרום לכל הטקסט להיהרס אלא רק לתו הספציפי.
לא הוגדר אופן אחיד לטיפול בתווים פגומים. חלק מהמפענחים יחזירו את התו '?', חלקם יתעלמו מה-byte-ים הלא תקינים, חלק ינסו לפענח בקידוד אחר וחלקם פשוט יעצרו את עבודתם.
UTF-8 הוא קידוד ברירת המחדל של לינוקס ויוניקס, וגם ב-mac os x משתמשים בו.
מספר יתרונות נוספים של UTF-8 הינם: 
1. הוא המיון הסטנדרטי ל-XML.
2. קל יחסית לזהות טקסטים שקודדו ב-UTF-8 כי הוא שונה מקידודים אחרים.
3. הוא יכול לקודד כל תו יוניקוד.
4. קל לזהות איפה מתחיל ומסתיים תו. כתוצאה מכך אם נתחיל לקרוא מאמצע מילה רק היא תיפגע ולא כל הטקסט.
5. בגלל הרישות השונו, אין הכלה של תו בתוך תו.
6. ה-byte הראשון בתו מספיק כדי לקבוע את אורך רצף ה-byte-ים.
7. מסתמך על פעולות בינאריות זולות ולא כפל וחילוק
קיימת חולשת אבטחה אפשרית ב-UTF-8 בכך שקיימות מספר צורות לרשום תווים מסויימים, בדרך קצרה ואידיאלית ובדרך ארוכה. מה שניתן לנצל על מנת לחדור מנגנוני אבטחה מסויימים.
